$date
	Wed Aug  6 15:07:07 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_1bit_tb $end
$var wire 1 ! sum $end
$var wire 1 " carry $end
$var parameter 32 # period $end
$var reg 1 $ Ainvert $end
$var reg 1 % Binvert $end
$var reg 1 & a $end
$var reg 1 ' b $end
$var reg 1 ( cin $end
$var reg 1 ) less $end
$var reg 2 * operation [1:0] $end
$scope module UUT $end
$var wire 1 $ Ainvert $end
$var wire 1 % Binvert $end
$var wire 1 + ab_and $end
$var wire 1 , ab_or $end
$var wire 1 - ab_sum $end
$var wire 1 ( cin $end
$var wire 1 ) less $end
$var wire 2 . operation [1:0] $end
$var wire 1 & src1 $end
$var wire 1 ' src2 $end
$var wire 1 / mux_result $end
$var wire 1 0 b_out $end
$var wire 1 1 a_out $end
$var reg 1 " cout $end
$var reg 1 ! result $end
$scope module MUX_A $end
$var wire 1 $ select $end
$var wire 1 & src1 $end
$var wire 1 2 src2 $end
$var reg 1 1 result $end
$upscope $end
$scope module MUX_B $end
$var wire 1 % select $end
$var wire 1 ' src1 $end
$var wire 1 3 src2 $end
$var reg 1 0 result $end
$upscope $end
$scope module MUX_result $end
$var wire 2 4 select [1:0] $end
$var wire 1 , src1 $end
$var wire 1 + src2 $end
$var wire 1 - src3 $end
$var wire 1 ) src4 $end
$var reg 1 / result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10100 #
$end
#0
$dumpvars
b0 4
03
02
11
10
1/
b0 .
0-
1,
1+
b0 *
0)
0(
1'
1&
0%
0$
1"
1!
$end
#21000
b1 *
b1 .
b1 4
#42000
0!
0/
b11 *
b11 .
b11 4
#63000
